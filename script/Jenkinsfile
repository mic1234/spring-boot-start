pipeline {
  agent {
    kubernetes {
      label 'podlabel'
      yaml """
kind: Pod
metadata:
  name: jenkins-agent
spec:
  containers:
  - name: maven
    image: gcr.io/cloud-builders/mvn
    imagePullPolicy: Always
    tty: true
    stdin: true
    command:
      - cat
  - name: jnlp
    image: 'jenkins/inbound-agent:4.3-4-alpine'
    args: ['\$(JENKINS_SECRET)', '\$(JENKINS_NAME)']
  - name: kaniko
    image: gcr.io/kaniko-project/executor:latest
    volumeMounts:
    - name: kaniko-secret
      mountPath: /secret
    env:
    - name: GOOGLE_APPLICATION_CREDENTIALS
      value: /secret/kaniko-secret.json
  - name: docker-container
    image: gcr.io/cloud-builders/docker
    volumeMounts:
    - mountPath: /var/run/docker.sock
      name: docker-socket-volume
    securityContext:
      privileged: true
  restartPolicy: Never
  volumes:
  - name: kaniko-secret
    secret:
      secretName: kaniko-secret
  - name: docker-socket-volume
    hostPath:
      path: /var/run/docker.sock
      type: File
"""
    }
  }

  stages {
    stage('Run maven') {
      steps {
        container('maven') {
          sh 'ls -al'
          sh 'pwd'
          sh 'mvn clean package'
        }
        container('docker-container') {
          sh 'ls -al'
          sh 'pwd'
          sh 'docker build . --tag=gcr.io/solar-botany-297306/gs-spring-boot-docker:v2 --no-cache'
        }
        container('kaniko') {
          sh 'ls -al'
          sh 'pwd'
          sh 'executor --dockerfile=Dockerfile --context=dir://home/jenkins/agent/workspace/test1_spring-boot --destination=gcr.io/solar-botany-297306/gs-spring-boot-docker:v2'
        }        
      }
    }
  }
}
